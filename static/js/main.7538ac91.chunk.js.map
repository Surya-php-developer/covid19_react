{"version":3,"sources":["components/Country/Country.js","components/CountryList/CountyList.js","components/SearchBox/Searchbox.js","App.js","reportWebVitals.js","index.js"],"names":["Country","props","className","src","stats","CountryCode","alt","Active","Confirmed","Deaths","Recovered","CountryList","map","country","SearchBox","type","placeholder","onChange","handleChange","App","state","countries","searchField","a","fetch","resp","json","this","setState","forEach","Slug","data","length","prevState","concat","ISO2","filtetedCounteries","filter","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gWAkBeA,EAfC,SAACC,GACb,OACG,sBAAKC,UAAU,UAAf,UACK,qBAAKC,IAAG,sCAAiCF,EAAMG,MAAMC,YAA7C,gBAAwEC,IAAKL,EAAMG,MAAMJ,UACjG,6BAAKC,EAAMG,MAAMJ,UACjB,sBAAKE,UAAU,WAAf,UACI,+CAAgBD,EAAMG,MAAMG,UAC5B,kDAAmBN,EAAMG,MAAMI,aAC/B,+CAAgBP,EAAMG,MAAMK,UAC5B,kDAAmBR,EAAMG,MAAMM,oBCEhCC,G,MAVK,SAACV,GACjB,OACI,qBAAKC,UAAU,cAAf,SAEID,EAAMG,MAAMQ,KAAI,SAAAC,GAAO,OAAG,cAAC,EAAD,CAAsCT,MAAQS,GAA9BA,EAAQR,oBCK/CS,G,MAVG,SAACb,GACf,OACI,uBAAOc,KAAK,SACZb,UAAU,SACVc,YAAaf,EAAMe,YACnBC,SAAUhB,EAAMiB,iBCFlBC,E,kDACJ,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXC,UAAU,GACVjB,MAAM,GACNkB,YAAY,IALH,E,4FAQb,qCAAAC,EAAA,sEAGqBC,MAAM,wCAH3B,cAGQC,EAHR,gBAI0BA,EAAKC,OAJ/B,OAIQL,EAJR,OAKEM,KAAKC,SAAS,CAACP,cACfM,KAAKP,MAAMC,UAAUQ,QAArB,uCAA6B,WAAMhB,GAAN,iBAAAU,EAAA,sEACRC,MAAM,4CAAD,OAA6CX,EAAQiB,OADlD,cACrBL,EADqB,gBAERA,EAAKC,OAFG,QAErBK,EAFqB,QAGnBC,QACR,EAAKJ,UAAS,SAAAK,GAAS,MACrB,CAAC7B,MAAM6B,EAAU7B,MAAM8B,OAAhB,2BAA2BH,EAAKA,EAAKC,OAAS,IAA9C,IAAiD3B,YAAYQ,EAAQsB,YALnD,2CAA7B,kCAAAR,KAAA,gBANF,gD,0EAeA,WAAS,IAAD,OACN,EAA4BA,KAAKP,MAA1BhB,EAAP,EAAOA,MAAMkB,EAAb,EAAaA,YACPc,EAAsBhC,EAAMiC,QAAO,SAAAxB,GAAO,OAC9CA,EAAQb,QAAQsC,cAAcC,SAASjB,EAAYgB,kBAErD,OACE,sBAAKpC,UAAU,MAAf,UACI,cAAC,EAAD,CAAWc,YAAc,yBAAwBE,aAAc,SAACsB,GAAD,OAAK,EAAKZ,SAAS,CAACN,YAAYkB,EAAEC,OAAOC,WACxG,cAAC,EAAD,CAAatC,MAAUgC,W,GAhCfO,IAAMC,WAsCTzB,IChCA0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7538ac91.chunk.js","sourcesContent":["import React from 'react';\r\nimport './country.css';\r\n\r\nconst Country = (props) =>{\r\n    return (\r\n       <div className='country'> \r\n            <img src={`https://www.countryflags.io/${props.stats.CountryCode}/flat/64.png`} alt={props.stats.Country}></img>\r\n            <h2>{props.stats.Country}</h2>\r\n            <div className='describe'>\r\n                <p>{`Active : ${props.stats.Active}`}</p>\r\n                <p>{`Confirmed : ${props.stats.Confirmed}`}</p>\r\n                <p>{`Deaths : ${props.stats.Deaths}`}</p>\r\n                <p>{`Recovered : ${props.stats.Recovered}`}</p>\r\n            </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Country","import React from 'react';\r\nimport Country from '../Country/Country';\r\nimport './countrylist.css';\r\n\r\nconst CountryList = (props) =>{\r\n    return (\r\n        <div className='countrylist'>\r\n        {\r\n            props.stats.map(country =><Country key = {country.CountryCode } stats ={country} /> ) \r\n        }\r\n        </div>\r\n     )  \r\n\r\n}\r\nexport default CountryList","import React from 'react';\r\nimport './searchbox.css'\r\n\r\nconst SearchBox = (props) => {\r\n    return (\r\n        <input type=\"search\"\r\n        className=\"search\"\r\n        placeholder={props.placeholder}\r\n        onChange={props.handleChange}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchBox;","// import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport CountryList from './components/CountryList/CountyList';\nimport SearchBox from './components/SearchBox/Searchbox';\n \nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      countries:[],\n      stats:[],\n      searchField:''\n    }\n  }\n  async componentDidMount(){\n    /*Called immediately after a component is mounted.\n    Setting state here will trigger re-rendering. */\n    const resp = await fetch('https://api.covid19api.com/countries')\n    const countries = await resp.json()\n    this.setState({countries})\n    this.state.countries.forEach(async country => {\n      const resp = await fetch(`https://api.covid19api.com/total/country/${country.Slug}`)\n      const data = await resp.json()\n      if(data.length)\n      this.setState(prevState => (\n        {stats:prevState.stats.concat({...data[data.length - 1],CountryCode:country.ISO2})}\n      ))\n    })\n  }\n  render(){\n    const {stats,searchField} = this.state\n    const filtetedCounteries  = stats.filter(country=>(\n      country.Country.toLowerCase().includes(searchField.toLowerCase())\n    ))\n    return (\n      <div className=\"App\">\n          <SearchBox placeholder = 'Enter Country Name....'handleChange={(e)=>this.setState({searchField:e.target.value})} />\n          <CountryList stats = { filtetedCounteries} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}